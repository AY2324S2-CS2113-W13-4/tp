@startuml
!include style.puml

hide circle
skinparam classAttributeIconSize 0

abstract Class Command <<abstract>> {
    + handleCommand()
}

Class AddCommand {
    - newItem: String
    - listOfBooks: ArrayList
    - splitItem: String[]
    - bookDataFile: File
    + processAddCommand(newSplitBook, listOfBooks)
}

Class BorrowCommand {
    - bookName: String
    - listOfBooks: ArrayList
    - bookDataFile: File
    + runBorrowCommand(foundBooks)
}

Class DeleteCommand {
    - listOfBooks: ArrayList
    - splitInput: String[]
    - bookDataFile: File
    + processDeleteCommand(listOfBooks)
}

Class EditCommand {
    - listOfBooks: ArrayList
    - userInput: String
    - bookDataFile: File
    + handleEditTitle(bookToEdit, bookNumberToEdit)
}

Class ExitCommand {

}

Class ExtendCommand {
    - bookName: String
    - listOfBooks: ArrayList
    - bookDataFile: File
}

Class FindCommand {
    - numberOfBookFound: static int
    - newItem: String
    - listOfBooks: ArrayList
    - getKeyword()
    - processFind(keyword)
    - filterBooks(keyword, bookFound)
    + getNumberOfBookFound()
}

Class HelpCommand {

}

Class ListCommand {
    - listOfBooks: ArrayList
    - inputCommand: String
    - sortedListOfBooks: ArrayList
    - splitCommand: String[]
    - numberOfBooks: int
    + parseCommand()
    + runListBlankCommand()
    + runListAlphabeticalCommand()
    + runListDateCommand()

}

Class ReturnCommand {
    - bookName: String
    - listOfBooks: ArrayList
    - bookDataFile: File
    + runReturnCommand(foundBooks)
}

Command <|--- AddCommand
Command <|-- BorrowCommand
Command <|-- DeleteCommand
Command <|--- EditCommand
Command <|-- ExitCommand
Command <|--- ExtendCommand
Command <|--- FindCommand
Command <|-- HelpCommand
Command <|--- ListCommand
Command <|-- ReturnCommand
@enduml